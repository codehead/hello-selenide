plugins {
    id 'java'
    id 'io.qameta.allure' version '2.9.3'
}

group 'com.sinensia'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.16.1'
    junitVersion = '5.8.1'
    cucumberVersion = '7.2.3'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation('com.codeborne:selenide:5.25.0')
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
    testImplementation('org.hamcrest:hamcrest:2.2')
    testImplementation('org.slf4j:slf4j-simple:1.7.30')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    testImplementation("io.cucumber:cucumber-java:${cucumberVersion}")
    testImplementation("io.cucumber:cucumber-junit:${cucumberVersion}")
    testImplementation("org.junit.vintage:junit-vintage-engine:${junitVersion}")
    testImplementation("io.qameta.allure:allure-cucumber4-jvm:2.15.0")
    testImplementation("com.automation-remarks:video-recorder-junit5:1.8")
    testImplementation("com.codeborne:phantomjsdriver:1.4.4")

}

// These default settings will be inherited by all Test tasks
tasks.withType(Test) {
    systemProperties["selenide.baseUrl"] = "https://robobar.sinensia.pw"
    // connect to selenoid
    systemProperties["selenide.remote"] = "http://192.168.62.11:4444/wd/hub"
    // edge
    // edit ~/.aerokube/selenoid/browsers.json to add a "MicrosoftEdge" section
//    systemProperties["selenide.browser"] = "edge"
    // chrome
    systemProperties["selenide.browser"] = "chrome"
//    systemProperties["selenide.browserVersion"] = "98.0"
    // firefox
//    systemProperties["selenide.browser"] = "firefox"
    // opera
    // edit ~/.aerokube/selenoid/browsers.json to add a "operablink" section
//    systemProperties["selenide.browser"] = "opera"
//    systemProperties["selenide.browserVersion"] = "83.0"
//    systemProperties["selenide.headless"] = "false" // opera does not support headless mode
    // phantomjs
    // must add testImplementation 'com.codeborne:phantomjsdriver:1.4.4'
//    systemProperties["selenide.browser"] = "org.openqa.selenium.phantomjs.PhantomJSDriver"
    // common selenide capabilities: vnc, video
    systemProperties["selenide.browserSize"] = "1024x768"
    // not actual selenide properties
//    systemProperties["selenide.enableVNC"] = "true"
//    systemProperties["selenide.enableVideo"] = "true"
    // no, browserCapabilities are not deserialized from system property
//    systemProperties["selenide.browserCapabilities"] = "{enableVNC: true, enableVideo: true}"

    // ignore failures to get report anyways
    ignoreFailures = true
    // use JUnit
    useJUnitPlatform()
}

test {
}

task 'testFirefox'(type:Test) {
    systemProperties["selenide.browser"] = "firefox"
}

task 'testEdge'(type:Test) {
    systemProperties["selenide.browser"] = "edge"
}

task 'testOpera'(type:Test) {
    systemProperties["selenide.browser"] = "opera"
}

task 'testPhantomJS'(type:Test) {
    systemProperties.remove("selenide.remote")
    systemProperties["selenide.browser"] = "org.openqa.selenium.phantomjs.PhantomJSDriver"
}

allure {
    autoconfigure = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:build/reports/cucumber-report.html',
                    '--plugin', 'json:build/reports/cucumber-report.json',
                    '--glue', 'com.sinensia',
                    'src/test/resources',
            ]
        }
    }
}